name: Publish SDK to Maven Central
env:
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - 'javasdk/**'
on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: ./javasdk/apps

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Create settings.xml for Maven Central
        run: |
          mkdir -p $HOME/.m2
          echo "<settings>
            <servers>
              <server>
                <id>central</id>
                <username>${{ secrets.SONATYPE_USERNAME }}</username>
                <password>${{ secrets.SONATYPE_PASSWORD }}</password>
              </server>
            </servers>
          </settings>" > $HOME/.m2/settings.xml

      - name: Build with Maven
        run: mvn -B clean compile

      - name: Run tests
        run: mvn -B test

      - name: Package, Sign and Publish to Maven Central
        run: mvn -B deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Auto-publish to Maven Central
        run: |
          DEPLOYMENT_ID=$(curl -s -X GET -u ${{ secrets.SONATYPE_USERNAME }}:${{ secrets.SONATYPE_PASSWORD }} \
            "https://central.sonatype.com/api/v1/publisher/deployment?filter=status:VALIDATION_PASSED" | \
            jq -r '.items[0].id')
          
          if [ -n "$DEPLOYMENT_ID" ] && [ "$DEPLOYMENT_ID" != "null" ]; then
            curl -X POST -u ${{ secrets.SONATYPE_USERNAME }}:${{ secrets.SONATYPE_PASSWORD }} \
              "https://central.sonatype.com/api/v1/publisher/deployment/$DEPLOYMENT_ID/publish"
            echo "Automatically published deployment ID: $DEPLOYMENT_ID"
          else
            echo "No valid deployment found to publish"
            exit 1
          fi
