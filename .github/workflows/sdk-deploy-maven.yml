name: Publish SDK to Maven Central
env:
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - 'javasdk/**'
on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps  # Set the working directory to where your pom.xml is

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
          
    - name: Configure GPG Key
      run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
        
    - name: Create settings.xml for Maven Central
      run: |
          mkdir -p $HOME/.m2
          cat > $HOME/.m2/settings.xml << EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 
                                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
              <servers>
                  <server>
                      <id>central</id>
                      <username>${{ secrets.SONATYPE_USERNAME }}</username>
                      <password>${{ secrets.SONATYPE_PASSWORD }}</password>
                  </server>
              </servers>
              <profiles>
                  <profile>
                      <id>gpg</id>
                      <properties>
                          <gpg.executable>gpg</gpg.executable>
                          <gpg.passphrase>${{ secrets.GPG_PASSPHRASE }}</gpg.passphrase>
                      </properties>
                  </profile>
              </profiles>
              <activeProfiles>
                  <activeProfile>gpg</activeProfile>
              </activeProfiles>
          </settings>
          EOF
          
    - name: Build with Maven
      run: mvn -B clean compile
        
    - name: Run tests
      run: mvn -B test
        
    - name: Package, Sign and Publish to Maven Central
      run: mvn -B deploy -DskipTests -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
      env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          
    - name: Auto-publish to Maven Central
      run: |
          # Install jq if not already available
          if ! command -v jq &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y jq
          fi
          
          DEPLOYMENT_ID=$(curl -s -X GET -u ${{ secrets.SONATYPE_USERNAME }}:${{ secrets.SONATYPE_PASSWORD }} \
            "https://central.sonatype.com/api/v1/publisher/deployment?filter=status:VALIDATION_PASSED" | \
            jq -r '.items[0].id')
          
          if [ -n "$DEPLOYMENT_ID" ] && [ "$DEPLOYMENT_ID" != "null" ]; then
            echo "Found deployment ID: $DEPLOYMENT_ID. Publishing to Maven Central..."
            curl -X POST -u ${{ secrets.SONATYPE_USERNAME }}:${{ secrets.SONATYPE_PASSWORD }} \
              "https://central.sonatype.com/api/v1/publisher/deployment/$DEPLOYMENT_ID/publish"
            echo "Automatically published deployment ID: $DEPLOYMENT_ID"
          else
            echo "No valid deployment found to publish"
            exit 1
          fi
