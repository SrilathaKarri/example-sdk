name: SDK Build, Test, and Publish

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Important for semantic versioning

    # Setup Java
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    # Configure Git User
    - name: Configure Git User
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"

    # Determine Next Version
    - name: Determine Next Version
      id: versioning
      run: |
        # Get the latest tag or start from 0.0.0
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
        
        # Extract major, minor, patch
        MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
        MINOR=$(echo $LATEST_TAG | cut -d. -f2)
        PATCH=$(echo $LATEST_TAG | cut -d. -f3)
        
        # Increment patch version
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
        
        echo "Calculated new version: $NEW_VERSION"
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

    # Update POM Version
    - name: Update POM Version
      run: |
        mvn versions:set -DnewVersion=${{ steps.versioning.outputs.version }}
        mvn versions:commit

    # Build and Test
    - name: Build with Maven
      run: mvn clean package test

    # Publish to GitHub Packages
    - name: Publish to GitHub Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml

    # Create GitHub Release
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.versioning.outputs.version }}
        name: Release ${{ steps.versioning.outputs.version }}
        body: |
          Automated SDK release
          - Automatic version increment
          - Build and test passed
        draft: false
        prerelease: false

    # Commit version changes back to repository
    - name: Commit Version Changes
      run: |
        git add pom.xml
        git commit -m "Bump version to ${{ steps.versioning.outputs.version }}"
        git push
