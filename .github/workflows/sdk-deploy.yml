name: SDK Build, Test, and Publish

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_ACTOR: ${{ github.actor }}

on:
  push:
    branches: 
      - x
  pull_request:
    branches: 
      - x

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}/.github/workflows

    - name: Configure Git User
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"

    - name: Determine Next Version
      id: versioning
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
        MAJOR=$(echo $LATEST_TAG | cut -d. -f1 | sed 's/^v//')
        MINOR=$(echo $LATEST_TAG | cut -d. -f2)
        PATCH=$(echo $LATEST_TAG | cut -d. -f3)
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
        echo "Calculated new version: $NEW_VERSION"
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Update POM Version
      run: |
        cd apps
        mvn versions:set -DnewVersion=${{ steps.versioning.outputs.version }}
        mvn versions:commit

    - name: Build with Maven
      run: |
        cd apps
        mvn clean package test

    - name: Publish to GitHub Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd apps
        mvn deploy -s ${{ github.workspace }}/.github/workflows/settings.xml

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ steps.versioning.outputs.version }}
        name: Release v${{ steps.versioning.outputs.version }}
        body: |
          Automated SDK release
          - Automatic version increment
          - Build and test passed
        draft: false
        prerelease: false

    - name: Commit Version Changes
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email '<>'
        cd apps
        git add pom.xml
        git commit -m "Bump version to ${{ steps.versioning.outputs.version }}"
        git push origin main
